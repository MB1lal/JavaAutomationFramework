# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.2.5
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test-and-report:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: mb1lal/java-test:java17
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
#    working_directory: /target/site
#    parallelism: 4
    steps:
      # Checkout the code as the first step.
      - checkout
      - browser-tools/install-browser-tools
      - run:
          name: Test
          command:  mvn clean -ntp -P useTheForks integration-test -Dserenity.batch.count-1 -Dserenity.batch.number-1 -Dfailsafe.rerunFailingTestsCount=2

      - store_test_results:
          path: target/cucumber-report/

      - run:
          name: Report
          command:  mvn -ntp serenity:aggregate

      - run:
          name: Compress Artifacts
          command: tar -cvzf myartifact.tar target/site/serenity

      - store_artifacts:
          path: myartifact.tar
          destination: AutomationPractice

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  AllTests: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - test-and-report
